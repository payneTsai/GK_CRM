<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipeak.dao.ChanceDao">
    <!-- Chance的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Chance_Map" type="com.entity.Chance">
        <id column="chance_id" property="chanceId" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="chance_name" property="chanceName" />
        <result column="chance_status" property="chanceStatus" />
        <result column="product_id" property="productId" />
        <result column="customer_id" property="customerId" />
        <result column="gmt_modified" property="gmtModified" />
        <result column="emp_id" property="empId" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:chance的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="chance_Column">
        chance.chance_id as chance_id
        ,chance.gmt_create as gmt_create
        ,chance.chance_name as chance_name
        ,chance.chance_status as chance_status
        ,chance.product_id as product_id
        ,chance.customer_id as customer_id
        ,chance.gmt_modified as gmt_modified
        ,chance.emp_id as emp_id
    </sql>

    <!--获得类名为:Chance对应的数据库表的数据总行数 -->
    <select id="getChanceRowCount" parameterType="com.common.Assist" resultType="java.lang.Long">
        select count(chance_id) from chance
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Chance对应数据库中表的数据集合 -->
    <select id="selectChance" parameterType="com.common.Assist"  resultMap="result_Chance_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="chance_Column" /> 
            </otherwise>
        </choose>
        from chance
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT chance_id as primary_key FROM chance
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=chance.chance_id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Chance对象,以参数Chance对象中不为空的属性作为条件进行查询-->
    <select id="selectChanceByObj" parameterType="com.entity.Chance" resultMap="result_Chance_Map">
        select 
            <include refid="chance_Column" /> 
        from chance
        <where>
            <if test="empId != null "> and chance.emp_id = #{empId}</if>
            <if test="gmtModified != null "> and chance.gmt_modified = #{gmtModified}</if>
            <if test="customerId != null "> and chance.customer_id = #{customerId}</if>
            <if test="productId != null "> and chance.product_id = #{productId}</if>
            <if test="chanceStatus != null "> and chance.chance_status = #{chanceStatus}</if>
            <if test="chanceName != null "> and chance.chance_name = #{chanceName}</if>
            <if test="gmtCreate != null "> and chance.gmt_create = #{gmtCreate}</if>
            <if test="chanceId != null "> and chance.chance_id = #{chanceId}</if>
        </where>
    </select> 

    <!-- 通过Chance的id获得对应数据库中表的数据对象-->
    <select id="selectChanceById" parameterType="java.lang.Long" resultMap="result_Chance_Map">
        select 
            <include refid="chance_Column" /> 
        from chance
        where chance.chance_id = #{id}
    </select> 

    <!-- 将Chance插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertChance" parameterType="com.entity.Chance">
        insert into chance(chance_id,gmt_create,chance_name,chance_status,product_id,customer_id,gmt_modified,emp_id) 
        values(#{chanceId},#{gmtCreate},#{chanceName},#{chanceStatus},#{productId},#{customerId},#{gmtModified},#{empId})
    </insert>

    <!-- 将Chance中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyChance" parameterType="com.entity.Chance">
        insert into chance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="chanceId != null">chance_id,</if>
            <if test="gmtCreate != null">gmt_create,</if>
            <if test="chanceName != null">chance_name,</if>
            <if test="chanceStatus != null">chance_status,</if>
            <if test="productId != null">product_id,</if>
            <if test="customerId != null">customer_id,</if>
            <if test="gmtModified != null">gmt_modified,</if>
            <if test="empId != null">emp_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="chanceId != null"> #{chanceId},</if>
            <if test="gmtCreate != null"> #{gmtCreate},</if>
            <if test="chanceName != null"> #{chanceName},</if>
            <if test="chanceStatus != null"> #{chanceStatus},</if>
            <if test="productId != null"> #{productId},</if>
            <if test="customerId != null"> #{customerId},</if>
            <if test="gmtModified != null"> #{gmtModified},</if>
            <if test="empId != null"> #{empId},</if>
        </trim>
    </insert>

    <!-- 将Chance批量插入到对应数据库的表中-->
    <insert id="insertChanceByBatch" parameterType="ArrayList">
        insert into chance(chance_id,gmt_create,chance_name,chance_status,product_id,customer_id,gmt_modified,emp_id) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.chanceId},#{item.gmtCreate},#{item.chanceName},#{item.chanceStatus},#{item.productId},#{item.customerId},#{item.gmtModified},#{item.empId})
        </foreach>
    </insert>

    <!-- 通过Chance的id将数据库表中对应的数据删除-->
    <delete id="deleteChanceById" parameterType="java.lang.Long">
        delete from chance
        where chance_id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Chance对应的数据库表的数据删除-->
    <delete id="deleteChance" parameterType="com.common.Assist">
        delete from chance
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Chance的id将Chance的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateChanceById" parameterType="com.entity.Chance">
        update chance set
            gmt_create=#{gmtCreate}
            ,chance_name=#{chanceName}
            ,chance_status=#{chanceStatus}
            ,product_id=#{productId}
            ,customer_id=#{customerId}
            ,gmt_modified=#{gmtModified}
            ,emp_id=#{empId}
        where chance_id=#{chanceId}
    </update>

    <!-- 通过Chance的id将Chance中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyChanceById" parameterType="com.entity.Chance">
        update chance
        <set>
            <if test="gmtCreate != null">
                gmt_create=#{gmtCreate},
            </if>
            <if test="chanceName != null">
                chance_name=#{chanceName},
            </if>
            <if test="chanceStatus != null">
                chance_status=#{chanceStatus},
            </if>
            <if test="productId != null">
                product_id=#{productId},
            </if>
            <if test="customerId != null">
                customer_id=#{customerId},
            </if>
            <if test="gmtModified != null">
                gmt_modified=#{gmtModified},
            </if>
            <if test="empId != null">
                emp_id=#{empId},
            </if>
        </set>
        where chance_id=#{chanceId}
    </update>

    <!-- 通过辅助工具Assist中的条件将Chance中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateChance" parameterType="map">
        update chance
        <set>
                chance_id=#{enti.chanceId},
                gmt_create=#{enti.gmtCreate},
                chance_name=#{enti.chanceName},
                chance_status=#{enti.chanceStatus},
                product_id=#{enti.productId},
                customer_id=#{enti.customerId},
                gmt_modified=#{enti.gmtModified},
                emp_id=#{enti.empId},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Chance中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyChance" parameterType="map">
        update chance
        <set>
            <if test="enti.chanceId != null">
                chance_id=#{enti.chanceId},
            </if>
            <if test="enti.gmtCreate != null">
                gmt_create=#{enti.gmtCreate},
            </if>
            <if test="enti.chanceName != null">
                chance_name=#{enti.chanceName},
            </if>
            <if test="enti.chanceStatus != null">
                chance_status=#{enti.chanceStatus},
            </if>
            <if test="enti.productId != null">
                product_id=#{enti.productId},
            </if>
            <if test="enti.customerId != null">
                customer_id=#{enti.customerId},
            </if>
            <if test="enti.gmtModified != null">
                gmt_modified=#{enti.gmtModified},
            </if>
            <if test="enti.empId != null">
                emp_id=#{enti.empId},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>